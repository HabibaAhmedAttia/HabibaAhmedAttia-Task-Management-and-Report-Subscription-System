{"openapi":"3.0.1","info":{"title":"Task Management API","description":"API documentation for Task Management System","version":"1.0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"security":[{"bearerAuth":[]}],"paths":{"/api/tasks/{id}":{"put":{"tags":["task-controller"],"summary":"Update a task by ID","description":"Updates a task by its ID if it belongs to the authenticated user and is not deleted. All fields are updated from the request body.","operationId":"updateTask","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseTask"}}}}}},"delete":{"tags":["task-controller"],"summary":"Delete a task by ID","description":"Soft deletes a task by its ID. The task must belong to the authenticated user. Deleted tasks can be restored.","operationId":"deleteTask","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseVoid"}}}}}}},"/api/subscription":{"put":{"tags":["subscription-controller"],"summary":"Update subscription","description":"Allows the authenticated user to partially update their subscription.","operationId":"updateSubscription","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseSubscription"}}}}}},"post":{"tags":["subscription-controller"],"summary":"Subscribe to report generation","description":"Allows an authenticated user to subscribe to periodic task reports (daily, weekly, or monthly). Reports include tasks with a due date in the selected period. The report will be sent to the user's email at the selected hour each day/week/month.","operationId":"subscribe","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseSubscription"}}}}}},"delete":{"tags":["subscription-controller"],"summary":"Unsubscribe from report generation","description":"Allows the authenticated user to stop receiving periodic reports. Deletes the user's current report subscription if it exists.","operationId":"unsubscribe","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseVoid"}}}}}}},"/api/tasks":{"get":{"tags":["task-controller"],"summary":"Get tasks with optional filters","description":"Retrieves tasks for the authenticated user. You can optionally filter by status and/or a date range.","operationId":"getTasks","parameters":[{"name":"status","in":"query","required":false,"schema":{"type":"string","enum":["PENDING","COMPLETED","OVERDUE"]}},{"name":"from","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"to","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","format":"int32","default":0}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponsePagedResponseTask"}}}}}},"post":{"tags":["task-controller"],"summary":"Create a new task","description":"Allows an authenticated user to create a new task by providing at least title.","operationId":"createTask","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseTask"}}}}}}},"/api/tasks/restore":{"post":{"tags":["task-controller"],"summary":"Restore the last deleted task","description":"Restores the most recently deleted task for the authenticated user. Useful for accidental deletions.","operationId":"restoreLastDeletedTask","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseTask"}}}}}}},"/api/auth/signup":{"post":{"tags":["auth-controller"],"summary":"User sign-up","description":"Register a new user account with full name, email, and password.","operationId":"signUp","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignUpRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseObject"}}}}}}},"/api/auth/signin":{"post":{"tags":["auth-controller"],"summary":"User sign-in","description":"Authenticate user with email and password, and return a JWT token on success.","operationId":"signIn","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignInRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseAuthResponse"}}}}}}},"/api/reports/test":{"get":{"tags":["report-controller-for-testing"],"operationId":"triggerReportManually","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseString"}}}}}}},"/api/tasks/batch":{"delete":{"tags":["task-controller"],"summary":"Batch delete tasks in a date range","description":"Soft deletes all tasks for the authenticated user within the specified start and end date range.","operationId":"deleteTasksInPeriod","parameters":[{"name":"from","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"to","in":"query","required":false,"schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiGenericResponseVoid"}}}}}}}},"components":{"schemas":{"TaskRequest":{"required":["title"],"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"startDate":{"type":"string","format":"date"},"dueDate":{"type":"string","format":"date"},"completionDate":{"type":"string","format":"date"},"status":{"type":"string","enum":["PENDING","COMPLETED","OVERDUE"]},"validCompletionDate":{"type":"boolean"},"validDateRange":{"type":"boolean"}}},"ApiGenericResponseTask":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Task"},"errors":{"type":"object","additionalProperties":{"type":"string"}}}},"Task":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"title":{"type":"string"},"description":{"type":"string"},"startDate":{"type":"string","format":"date"},"dueDate":{"type":"string","format":"date"},"completionDate":{"type":"string","format":"date"},"deleted":{"type":"boolean"},"deletedAt":{"type":"string","format":"date-time"},"status":{"type":"string","enum":["PENDING","COMPLETED","OVERDUE"]},"owner":{"$ref":"#/components/schemas/User"}}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"username":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"}}},"SubscriptionRequest":{"required":["frequency","reportHour","startDate"],"type":"object","properties":{"startDate":{"type":"string","format":"date"},"frequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY"]},"reportHour":{"maximum":23,"minimum":0,"type":"number","format":"double"}}},"ApiGenericResponseSubscription":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Subscription"},"errors":{"type":"object","additionalProperties":{"type":"string"}}}},"LocalTime":{"type":"object","properties":{"hour":{"type":"integer","format":"int32"},"minute":{"type":"integer","format":"int32"},"second":{"type":"integer","format":"int32"},"nano":{"type":"integer","format":"int32"}}},"Subscription":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"frequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY"]},"startDate":{"type":"string","format":"date"},"reportHour":{"$ref":"#/components/schemas/LocalTime"},"user":{"$ref":"#/components/schemas/User"}}},"SignUpRequest":{"required":["email","password","username"],"type":"object","properties":{"username":{"type":"string"},"email":{"type":"string"},"password":{"pattern":"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$","type":"string"}}},"ApiGenericResponseObject":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"type":"object"},"errors":{"type":"object","additionalProperties":{"type":"string"}}}},"SignInRequest":{"required":["email","password"],"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"}}},"ApiGenericResponseAuthResponse":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/AuthResponse"},"errors":{"type":"object","additionalProperties":{"type":"string"}}}},"AuthResponse":{"type":"object","properties":{"token":{"type":"string"}}},"ApiGenericResponsePagedResponseTask":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/PagedResponseTask"},"errors":{"type":"object","additionalProperties":{"type":"string"}}}},"PagedResponseTask":{"type":"object","properties":{"content":{"type":"array","items":{"$ref":"#/components/schemas/Task"}},"pageNumber":{"type":"integer","format":"int32"},"pageSize":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"totalPages":{"type":"integer","format":"int32"}}},"ApiGenericResponseString":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"type":"string"},"errors":{"type":"object","additionalProperties":{"type":"string"}}}},"ApiGenericResponseVoid":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"type":"object"},"errors":{"type":"object","additionalProperties":{"type":"string"}}}}},"securitySchemes":{"bearerAuth":{"type":"http","name":"bearerAuth","scheme":"bearer","bearerFormat":"JWT"}}}}